name: python_linters


on:
  pull_request:
    paths:
      - 'core/**'


env:
  PYTHON_VERSION: '3.11'


jobs:
  build-python:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup python
      id: python-setup
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Check if cache exists
      uses: actions/cache/restore@v3
      id: cache-check
      with:
        lookup-only: true
        path: ./.venv/
        key: ${{ runner.os }}-${{ steps.python-setup.outputs.python-version }}-venv-${{ hashFiles('core/requirements.txt') }}

    - name: Install dependencies if no cache found
      if: steps.cache-check.outputs.cache-hit != 'true'
      run: |
        python -m venv ./.venv
        source ./.venv/bin/activate
        python -m pip install -r core/requirements.txt

    - name: List installed packages
      if: steps.cache-check.outputs.cache-hit != 'true'
      run: |
        source ./.venv/bin/activate
        pip list

    - name: Upload new cache if exists
      if: steps.cache-check.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: ./.venv/
        key: ${{ runner.os }}-${{ steps.python-setup.outputs.python-version }}-venv-${{ hashFiles('core/requirements.txt') }}

  ruff:
    runs-on: ubuntu-latest
    needs: build-python
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Python setup
        id: python-setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Load cached virtual environment
        uses: actions/cache/restore@v3
        with:
          path: ./.venv/
          key: ${{ runner.os }}-${{ steps.python-setup.outputs.python-version }}-venv-${{ hashFiles('core/requirements.txt') }}

      - name: Run ruff
        run: |
          source ./.venv/bin/activate
          ruff check core --verbose --output-format=github


  mypy:
    runs-on: ubuntu-latest
    needs: build-python
    env:
      MYPY_REPORT_DIR: 'mypy_report'
    permissions:
      actions: read
      contents: read
      packages: read
      pull-requests: write
      checks: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Python setup
        id: python-setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Load cached virtual environment
        uses: actions/cache/restore@v3
        with:
          path: ./.venv/
          key: ${{ runner.os }}-${{ steps.python-setup.outputs.python-version }}-venv-${{ hashFiles('core/requirements.txt') }}

      - name: Run Mypy
        run: |
          source ./.venv/bin/activate
          mypy core --show-error-codes --pretty --show-column-numbers --show-error-context --cobertura-xml-report $MYPY_REPORT_DIR

      - name: Type Hint Coverage Summary Report
        uses: 5monkeys/cobertura-action@master
        with:
          path: ${{ env.MYPY_REPORT_DIR }}/*.xml
          minimum_coverage: 80
          show_missing: true
          link_missing_lines: true
          report_name: Type hint coverage

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Python setup
        id: python-setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Load cached virtual environment
        uses: actions/cache/restore@v3
        with:
          path: ./.venv/
          key: ${{ runner.os }}-${{ steps.python-setup.outputs.python-version }}-venv-${{ hashFiles('core/requirements.txt') }}
      - name: Run tests
        uses: dariocurr/pytest-summary@main
        with:
          paths: tests/*
          options: --quiet
          show: all