name: linters

on: push

env:
  PYTHON_VERSION: '3.11'

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Cache virtualenv
      uses: actions/cache@v3
      id: cache-venv
      with:
        path: ./.venv/
        key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-
    - name: Install dependencies
      shell: bash
      run: |
        python -m venv ./.venv
        source ./.venv/bin/activate
        python -m pip install -r requirements.txt
      if: steps.cache-venv.outputs.cache-hit != 'true'
    - name: Check installed packages
      run: pip list
    - name: ruff
      run: ruff check core --verbose --output-format=github

  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Cache virtualenv
      uses: actions/cache@v3
      id: cache-venv
      with:
        path: ./.venv/
        key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-
    - name: Install dependencies
      shell: bash
      run: |
        python -m venv ./.venv
        source ./.venv/bin/activate
        python -m pip install -r requirements.txt
      if: steps.cache-venv.outputs.cache-hit != 'true'
    - name: Check installed packages
      run: pip list
    - name: mypy
      run: mypy core --show-error-codes --pretty --show-column-numbers --show-error-context
